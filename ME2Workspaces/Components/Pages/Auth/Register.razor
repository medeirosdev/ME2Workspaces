@page "/register"
@rendermode InteractiveServer
@using Me2Workspaces.ModulosME2.DBUser;
@using static Me2Workspaces.ModulosME2.DBUser.UserService
@inject UserService UserService
@inject NavigationManager NavigationManager

<div class="login-container">
    <div class="left-section">
        <div class="logo-container">
            <img src="images/me2-logo.png" alt="Me2 Logo" class="logo" />
        </div>
        <div class="illustration-container">
            <img src="images/illustration.png" alt="Illustration" class="illustration" />
        </div>
    </div>
    <div class="right-section">
        <h2>Registro de Usuário</h2>
        <p>Preencha os campos abaixo para criar sua conta na plataforma.</p>
        <div>
            <div class="form-floating mb-3">
                <input @bind="username" class="form-control" placeholder="Digite seu nome de usuário" />
                <label for="username" class="form-label">Nome de Usuário</label>
            </div>
            <div class="form-floating mb-3">
                <input @bind="email" type="email" class="form-control" placeholder="Digite seu email" />
                <label for="email" class="form-label">E-mail</label>
            </div>
            <div class="form-floating mb-3">
                <input @bind="senha" type="password" class="form-control" placeholder="Digite sua senha" />
                <label for="senha" class="form-label">Senha</label>
            </div>
            <div class="form-floating mb-3">
                <input @bind="confirmarSenha" type="password" class="form-control" placeholder="Confirme sua senha" />
                <label for="confirmarSenha" class="form-label">Confirmar Senha</label>
            </div>
            <div class="form-floating mb-3">
                <textarea @bind="informacoesEmpresa" class="form-control" placeholder="Detalhes da empresa"></textarea>
                <label for="informacoesEmpresa" class="form-label">Informações Extras</label>
            </div>
            <div>
                <button @onclick="HandleRegister" class="w-100 btn btn-primary">Registrar</button>
            </div>
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="text-danger mt-2">
                    <p>@ErrorMessage</p>
                </div>
            }
            @if (!string.IsNullOrEmpty(SuccessMessage))
            {
                <div class="text-success mt-2">
                    <p>@SuccessMessage</p>
                </div>
            }
        </div>
    </div>
</div>

<style>

    .login-container {
        display: flex;
        height: 100vh;
        background-color: #f5f5f5;
    }

    .left-section {
        flex: 1;
        background-color: #002366;
        color: white;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 20px;
    }

    .logo {
        width: 150px;
        margin-bottom: 20px;
    }

    .illustration {
        max-width: 100%;
        height: auto;
    }

    .right-section {
        flex: 1;
        padding: 40px;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

        .right-section h2 {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 10px;
            color: #002366;
        }

        .right-section p {
            font-size: 16px;
            margin-bottom: 20px;
        }

    .btn-primary {
        background-color: #002366;
        border: none;
    }

        .btn-primary:hover {
            background-color: #001a4d;
        }

    .text-danger {
        color: red;
    }

    .text-success {
        color: green;
    }

    .form-check-label {
        margin-left: 5px;
    }
</style>

@code {
    private string username = string.Empty;
    private string email = string.Empty;
    private string senha = string.Empty;
    private string confirmarSenha = string.Empty;
    private int tipoDaConta;
    private bool isAdmin;
    private int tipoDoContrato;
    private string informacoesEmpresa = string.Empty;

    private string ErrorMessage = string.Empty;
    private string SuccessMessage = string.Empty;

    private async Task HandleRegister()
    {
        // Validação básica
        if (string.IsNullOrWhiteSpace(username) ||
            string.IsNullOrWhiteSpace(email) ||
            string.IsNullOrWhiteSpace(senha) ||
            string.IsNullOrWhiteSpace(confirmarSenha))
        {
            ErrorMessage = "Preencha todos os campos obrigatórios.";
            SuccessMessage = string.Empty;
            return;
        }

        if (senha != confirmarSenha)
        {
            ErrorMessage = "As senhas não conferem.";
            SuccessMessage = string.Empty;
            return;
        }

        // Cria o modelo de usuário
        var novoUsuario = new AuthUserModel
            {
                Username = username,
                Email = email,
                Senha = senha, // Em produção, hashear a senha antes de armazenar
                TipoDaConta = tipoDaConta,
                ADMIN = isAdmin,
                TipoDoContrato = tipoDoContrato,
                InformacoesEmpresa = informacoesEmpresa,
                Token = "" // Se necessário, gerar ou deixar vazio
            };

        // Tenta criar o usuário no banco de dados
        bool criado = await UserService.CreateUser(novoUsuario);
        if (criado)
        {
            SuccessMessage = "Usuário registrado com sucesso!";
            ErrorMessage = string.Empty;
        }
        else
        {
            ErrorMessage = "Falha ao registrar usuário. Tente novamente.";
            SuccessMessage = string.Empty;
        }
    }
}
