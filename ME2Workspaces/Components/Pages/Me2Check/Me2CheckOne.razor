@using ME2Workspaces.ModulosME2.Me2YoutubeCheck
@using MudBlazor
@using Newtonsoft.Json
@using Me2Workspaces.ModulosME2.Me2InstagramCheck;
@page "/me2checkinstaone"
@inject IJSRuntime JS

@rendermode InteractiveServer

<div style="margin:20px;">

    <MudContainer MaxWidth="MaxWidth.Medium">
        <MudText Color="Color.Dark" Typo="Typo.h4" Align="Align.Center" GutterBottom="true">Me2InstagramCheck</MudText>
        <MudText Color="Color.Dark" Typo="Typo.subtitle1" Align="Align.Center" GutterBottom="true">Encontre informações rapidamente com nossa ferramenta poderosa</MudText>
        <MudText Color="Color.Dark" Typo="Typo.body2" Align="Align.Center" GutterBottom="true">Digite o ID ou username do instagram que você deseja pesquisar e receba informações detalhadas sobre o canal, terá como salvar as informações em formatos JSON e CSV, e as informações obtidas serão salvas em nosso banco de dados, para fins de análise de dados.</MudText>

        <div style="display: flex; align-items: center; justify-content: center; margin-top: 20px;">
            <MudTextField @bind-Value="@username" AdornmentColor="Color.Dark"
                          ReadOnly="false" Variant="Variant.Text" />
            <MudButton OnClick="@(async () => await Pesquisar())" Variant="Variant.Filled" Color="Color.Dark">
                Pesquisar
            </MudButton>
        </div>
    </MudContainer>


    <div style="margin:20px;">
        @if (respostaAPInstagram != null)
        {
            <div style="display:flex;flex-direction:column">

                <div style="margin:0px;">
                    <MudButton OnClick="@DownloadCsv" Variant="Variant.Filled" Color="Color.Secondary">
                        Baixar CSV
                    </MudButton>

                    <MudButton OnClick="@DownloadJSON" Variant="Variant.Filled" Color="Color.Secondary">
                        Baixar JSON
                    </MudButton>
                </div>

                <MudCard Style="width:450px;">
                    <MudCardContent Style="display:flex; flex-direction:column">

                        <MudImage Src="@respostaAPInstagram.profile_picture_url" Width="45" Height="45" ObjectFit="ObjectFit.Fill" Alt="Channel Image" Class="rounded-lg" />
                        <MudText Typo="Typo.h5" Class="mud-margin-bottom-2">@respostaAPInstagram.username</MudText>
                        <MudText Typo="Typo.subtitle2" Class="mud-margin-bottom-2">@($"ID: {respostaAPInstagram.id}")</MudText>
                        <MudGrid>
                            <MudItem>
                                <MudText Typo="Typo.subtitle1">Seguidores</MudText>
                                <MudText Typo="Typo.body2">@respostaAPInstagram.followers_count.ToString("N2")</MudText>
                            </MudItem>
                            <MudItem>
                                <MudText Typo="Typo.subtitle1">Seguindo</MudText>
                                <MudText Typo="Typo.body2">@respostaAPInstagram.follows_count.ToString("N2")</MudText>
                            </MudItem>
                            <MudItem>
                                <MudText Typo="Typo.subtitle1">Likes</MudText>
                                <MudText Typo="Typo.body2">@respostaAPInstagram.list_like_count.Sum().ToString("N2")</MudText>
                            </MudItem>
                            <MudItem>
                                <MudText Typo="Typo.subtitle1">Comentários</MudText>
                                <MudText Typo="Typo.body2">@respostaAPInstagram.list_comments_count.Sum().ToString("N2")</MudText>
                            </MudItem>

                        </MudGrid>

                        @* <MudText Typo="Typo.h6" Color="Color.Primary" Class="mud-margin-top-4">Score: @respostaAPInstagram..ToString("0.00")</MudText> *@

                    </MudCardContent>
                </MudCard>



                <MudExpansionPanels Style="width:450px;" MultiExpansion="false">
                    <MudExpansionPanel Text="JSON OBTIDO">
                        @if (respostaAPInstagram != null)
                        {
                            <pre>@JsonConvert.SerializeObject(respostaAPInstagram, Formatting.Indented)</pre>
                        }
                    </MudExpansionPanel>
                </MudExpansionPanels>
            </div>
        }
    </div>

</div>


@code {

    private async Task DownloadCsv()
    {
        await Task.Delay(100);

        var csvContent = CSVService.ToCsv(respostaAPInstagram);
        var byteArray = System.Text.Encoding.UTF8.GetBytes(csvContent);
        var base64 = Convert.ToBase64String(byteArray);
        var fileName = "dado.csv";
        var fileUrl = $"data:text/csv;base64,{base64}";
        await JS.InvokeVoidAsync("downloadFile", fileName, fileUrl);
    }

    private async Task DownloadJSON()
    {
        await Task.Delay(100);

        var csvContent = CSVService.ToJSON(respostaAPInstagram);
        var byteArray = System.Text.Encoding.UTF8.GetBytes(csvContent);
        var base64 = Convert.ToBase64String(byteArray);
        var fileName = "dado.json";
        var fileUrl = $"data:text/json;base64,{base64}";
        await JS.InvokeVoidAsync("downloadFile", fileName, fileUrl);
    }

    public bool isExpanded { get; set; } = false;

    public string username { get; set; } = "";

    public UserData respostaAPInstagram;

    private async Task Pesquisar()
    {
        if (!string.IsNullOrWhiteSpace(username))
        {
            // Assuming the username is the channel_id here. Adjust if necessary.
            respostaAPInstagram = await ModuloInstagramME2Check.GetInstagramAPI(username);

            if (respostaAPInstagram == null)
            {
                username = "Erro";
            }
        }

        StateHasChanged();
    }

}